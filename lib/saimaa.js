// Generated by CoffeeScript 1.12.7
(function() {
  var Saimaa, SaimaaDOM, SaimaaUI, SaimaaUtil, h;

  h = require("h");

  SaimaaUtil = require("./saimaa_util");

  SaimaaDOM = require("./saimaa_dom");

  SaimaaUI = require("./saimaa_ui");

  Saimaa = (function() {
    function Saimaa(source) {
      this.source = source;
      this.initEditor();
      this.dom = new SaimaaDOM(this.editor);
      this.ui = new SaimaaUI(this.editor);
      this.ui.h2.addEventListener("click", (function(_this) {
        return function(event) {
          return _this.h2(event);
        };
      })(this));
      this.ui.h3.addEventListener("click", (function(_this) {
        return function(event) {
          return _this.h3(event);
        };
      })(this));
      this.ui.h4.addEventListener("click", (function(_this) {
        return function(event) {
          return _this.h4(event);
        };
      })(this));
      this.ui.ol.addEventListener("click", (function(_this) {
        return function(event) {
          return _this.ol(event);
        };
      })(this));
      this.ui.ul.addEventListener("click", (function(_this) {
        return function(event) {
          return _this.ul(event);
        };
      })(this));
      this.ui.bq.addEventListener("click", (function(_this) {
        return function(event) {
          return _this.bq(event);
        };
      })(this));
      this.ui.clear.addEventListener("click", (function(_this) {
        return function(event) {
          return _this.clear(event);
        };
      })(this));
      this.editor.addEventListener("keydown", (function(_this) {
        return function(event) {
          return _this.onKeyDown(event);
        };
      })(this));
      this.editor.addEventListener("keyup", (function(_this) {
        return function(event) {
          return _this.onKeyUp(event);
        };
      })(this));
      this.editor.addEventListener("click", (function(_this) {
        return function(event) {
          return _this.onClick(event);
        };
      })(this));
    }

    Saimaa.prototype.initEditor = function() {
      this.editor = document.createElement("div");
      this.editor.contentEditable = true;
      this.editor.className = this.source.className;
      this.source.parentNode.insertBefore(this.editor, this.source);
      return this.source.style.display = "none";
    };

    Saimaa.prototype.h2 = function(event) {
      return this.dom.formatBlock("h2");
    };

    Saimaa.prototype.h3 = function(event) {
      return this.dom.formatBlock("h3");
    };

    Saimaa.prototype.h4 = function(event) {
      return this.dom.formatBlock("h4");
    };

    Saimaa.prototype.ol = function(event) {
      return this.dom.changeOl();
    };

    Saimaa.prototype.ul = function(event) {
      return this.dom.changeUl();
    };

    Saimaa.prototype.bq = function(event) {
      return this.dom.changeBlockquote();
    };

    Saimaa.prototype.clear = function(event) {
      document.execCommand("removeFormat", false);
      this.dom.formatBlock("p");
      return document.execCommand("outdent", false);
    };

    Saimaa.prototype.newLine = function() {
      if (this.dom.inP() && !this.dom.inTitle()) {
        if (this.dom.tailBr()) {
          return this.dom.appendP();
        } else {
          return this.dom.addBr();
        }
      } else {
        if (this.dom.inLi()) {
          if (this.dom.inBlankLi()) {
            return this.dom.breakLi();
          } else {
            return this.dom.appendLi();
          }
        } else {
          return this.dom.appendP();
        }
      }
    };

    Saimaa.prototype.onClick = function(event) {
      var child, height, i, len, ref;
      console.log(event.target);
      ref = this.editor.children;
      for (i = 0, len = ref.length; i < len; i++) {
        child = ref[i];
        child.classList.remove("active");
      }
      if (this.editor !== event.target && this.editor.contains(event.target)) {
        event.target.classList.add("active");
        this.ui.blockUI.style.display = "flex";
        height = this.ui.blockUI.clientHeight;
        this.ui.blockUI.style.top = (parseInt(event.target.offsetTop - height)) + "px";
        return this.ui.blockUI.style.left = (parseInt(event.target.offsetLeft)) + "px";
      }
    };

    Saimaa.prototype.onKeyDown = function(event) {
      if (this.editor.children.length === 0) {
        this.dom.formatBlock("p");
        this.dom.changeTitle();
      }
      if (event.keyCode === 13) {
        event.preventDefault();
        this.newLine();
      }
      return this.dom.saveLastNode();
    };

    Saimaa.prototype.onKeyUp = function(event) {
      return "aaa";
    };

    return Saimaa;

  })();

  module.exports = Saimaa;

}).call(this);
